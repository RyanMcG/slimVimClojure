*slimvim.txt*                  Slimvim               Last Change: 11 Mar 2008

Slimvim                                                              *slimvim*
                                Version 0.1

Plugin for easily exploring (or browsing) Vim |:buffers|.

|slimvim-usage|              Usage
|slimvim-installation|       Installation
|slimvim-customization|      Customization
|slimvim-faq|                Frequently Asked Questions
|slimvim-changelog|          Change Log
|slimvim-todo|               Todo
|slimvim-credits|            Credits

For Vim version 7.0 and above.
This plugin is only available if 'compatible' is not set.

{Vi does not have any of this}

==============================================================================
INSTALLATION                                            *slimvim-installation*

To install:
  - Download the bufexplorer.zip.
  - Extract the zip archive into your runtime directory.
    The archive contains plugin/bufexplorer.vim, and doc/bufexplorer.txt.
  - Start Vim or goto an existing instance of Vim.
  - Execute the following command:
>
      :helptag <your runtime directory/doc
<
    This will generate all the help tags for any file located in the doc
    directory.

==============================================================================
USAGE                                                          *slimvim-usage*

To start exploring in the current window, use: >

 \be   OR  :BufExplorer

If you would like to use something other than '\', you may simply change the
leader (see |mapleader|).

Note: If the current buffer is modified when bufexplorer started, the current
      window is always split and the new bufexplorer is displayed in that new
      window.

Commands to use once exploring:

 <enter>       Opens the buffer that is under the cursor into the current
               window.
 <F1>          Toggle help information.
 <leftmouse>   Opens the buffer that is under the cursor into the current
               window.
 <shift-enter> Opens the buffer that is under the cursor in another tab.
 d             |:wipeout| the buffer under the cursor from the list.
               When a buffers is wiped, it will not be shown when unlisted
               buffer are displayed.
 D             |:delete| the buffer under the cursor from the list.
               The buffer's 'buflisted' is cleared. This allows for the buffer
               to be displayed again using the 'show unlisted' command.
 f             Toggles whether you are taken to the active window when
               selecting a buffer or not.
 p             Toggles the showing of a split filename/pathname.
 q             Quit exploring.
 r             Reverses the order the buffers are listed in.
 R             Toggles relative path/absolute path.
 s             Selects the order the buffers are listed in. Either by buffer
               number, file name, file extension, most recently used (MRU), or
               full path.
 t             Opens the buffer that is under the cursor in another tab.
 u             Toggles the showing of "unlisted" buffers.

Once invoked, Buffer Explorer displays a sorted list (MRU is the default
sort method) of all the buffers that are currently opened. You are then
able to move the cursor to the line containing the buffer's name you are
wanting to act upon. Once you have selected the buffer you would like,
you can then either open it, close it(delete), resort the list, reverse
the sort, quit exploring and so on...

===============================================================================
CUSTOMIZATION                                           *slimvim-customization*

                                                     *g:bufExplorerDefaultHelp*
To control whether the default help is displayed or not, use: >
  let g:bufExplorerDefaultHelp=0       " Do not show default help.
  let g:bufExplorerDefaultHelp=1       " Show default help.
The default is to show the default help.

                                                    *g:bufExplorerDetailedHelp*
To control whether detailed help is display by, use: >
  let g:bufExplorerDetailedHelp=0      " Do not show detailed help.
  let g:bufExplorerDetailedHelp=1      " Show detailed help.
The default is NOT to show detailed help.

                                                      *g:bufExplorerFindActive*
To control whether you are taken to the active window when selecting a buffer,
use: >
  let g:bufExplorerFindActive=0        " Do not go to active window.
  let g:bufExplorerFindActive=1        " Go to active window.
The default is to be taken to the active window.

                                                     *g:bufExplorerReverseSort*
To control whether to sort the buffer in reverse order or not, use: >
  let g:bufExplorerReverseSort=0       " Do not sort in reverse order.
  let g:bufExplorerReverseSort=1       " Sort in reverse order.
The default is NOT to sort in reverse order.

                                                 *g:bufExplorerShowDirectories*
Directories usually show up in the list from using a command like ":e .".
To control whether to show directories in the buffer list or not, use: >
  let g:bufExplorerShowDirectories=1   " Show directories.
  let g:bufExplorerShowDirectories=0   " Don't show directories.
The default is to show directories.

                                                *g:bufExplorerShowRelativePath*
To control whether to show absolute paths or relative to the current
directory, use: >
  let g:bufExplorerShowRelativePath=0  " Show absolute paths.
  let g:bufExplorerShowRelativePath=1  " Show relative paths.
The default is to show absolute paths.

                                                    *g:bufExplorerShowUnlisted*
To control whether to show unlisted buffer or not, use: >
  let g:bufExplorerShowUnlisted=0      " Do not show unlisted buffers.
  let g:bufExplorerShowUnlisted=1      " Show unlisted buffers.
The default is to NOT show unlisted buffers.

                                                          *g:bufExplorerSortBy*
To control what field the buffers are sorted by, use: >
  let g:bufExplorerSortBy='extension'  " Sort by file extension.
  let g:bufExplorerSortBy='fullpath'   " Sort by full file path name.
  let g:bufExplorerSortBy='mru'        " Sort by most recently used.
  let g:bufExplorerSortBy='name'       " Sort by the buffer's name.
  let g:bufExplorerSortBy='number'     " Sort by the buffer's number.
The default is to sort by mru.

                                                *g:bufExplorerSplitOutPathName*
To control whether to split out the path and file name or not, use: >
  let g:bufExplorerSplitOutPathName=1  " Split the path and file name.
  let g:bufExplorerSplitOutPathName=0  " Don't split the path and file
                                       " name.
The default is to split the path and file name.

===============================================================================
CHANGE LOG                                                  *slimvim-changelog*

7.0.4  - Fixed a problem discovered first by Xiangjiang Ma. Well since I've
         been using vim 7.0 and not 6.3, I started using a function (getftype)
         that is not in 6.3. So for backward compatibility, I conditionaly use
         this function now.  Thus, the g:bufExplorerShowDirectories feature is
         only available when using vim 7.0 and above.
7.0.3  - Thanks to Erwin Waterlander for finding a problem when the last
         buffer was deleted. This issue got me to rewrite the buffer display
         logic (which I've wanted to do for sometime now).
         Also great thanks to Dave Eggum for coming up with idea for
         g:bufExplorerShowDirectories. Read the above information about this
         feature.
7.0.2  - Thanks to Thomas Arendsen Hein for finding a problem when a user
         has the default help turned off and then brought up the explorer. An
         E493 would be displayed.
7.0.1  - Thanks to Erwin Waterlander for finding a couple problems.
         The first problem allowed a modified buffer to be deleted.  Opps! The
         second problem occurred when several files were opened, BufExplorer
         was started, the current buffer was deleted using the 'd' option, and
         then BufExplorer was exited. The deleted buffer was still visible
         while it is not in the buffers list. Opps again!
7.0.0  - Thanks to Shankar R. for suggesting to add the ability to set
         the fixed width (g:bufExplorerSplitVertSize) of a new window
         when opening bufexplorer vertically and fixed height
         (g:bufExplorerSplitHorzSize) of a new window when opening
         bufexplorer horizontally. By default, the windows are normally
         split to use half the existing width or height.
6.3.0  - Added keepjumps so that the jumps list would not get cluttered with
         bufexplorer related stuff.
6.2.3  - Thanks to Jay Logan for finding a bug in the vertical split position
         of the code. When selecting that the window was to be split
         vertically by doing a '\bv', from then on, all splits, i.e. '\bs',
         were split vertically, even though g:bufExplorerSplitType was not set
         to 'v'.
6.0.6  - Copyright notice added. Needed this so that it could be distributed
         with Debian Linux. Fixed problem with the SortListing() function
         failing when there was only one buffer to display.
6.0.5  - Fixed problems reported by David Pascoe, in that you where unable to
         hit 'd' on a buffer that belonged to a files that no longer existed
         and that the 'yank' buffer was being overridden by the help text when
         the bufexplorer was opened.
6.0.4  - Thanks to Charles Campbell, Jr. for making this plugin more plugin
         *compliant*, adding default keymappings of <Leader>be and <Leader>bs
         as well as fixing the 'w:sortDirLabel not being defined' bug.
6.0.3  - Added sorting capabilities. Sort taken from explorer.vim.
6.0.2  - Can't remember.
0.1    - Initial release.

===============================================================================
TODO                                                             *slimvim-todo*

- The issuing of a ':bd' command does not always remove the buffer number from
  the MRU list.
- Look into adding '\bs' (buffer split) command back into the code.

===============================================================================
CREDITS                                                       *slimvim-credits*

Author: Tamas Kovacs <kovisoft at gmail dot com>

Credit must go out to Bram Moolenaar and all the Vim developers for
making the world's best editor (IMHO). I also want to thank everyone who
helped and gave me suggestions. I wouldn't want to leave anyone out so I
won't list names.

===============================================================================
vim:tw=78:noet:wrap:ts=8:ft=help:norl:
