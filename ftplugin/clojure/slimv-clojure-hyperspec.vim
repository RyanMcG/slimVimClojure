" slimv-clojure-hyperspec.vim:
"               Clojure Hyperspec lookup support for Slimv
" Version:      0.5.0
" Last Change:  01 Apr 2009
" Maintainer:   Tamas Kovacs <kovisoft at gmail dot com>
" License:      This file is placed in the public domain.
"               No warranty, express or implied.
"               *** ***   Use At-Your-Own-Risk!   *** ***
"
" =====================================================================
"
"  Load Once:
if &cp || exists( 'g:slimv_chs_loaded' )
    finish
endif

let g:slimv_chs_loaded = 1

" Root of the Clojure Hyperspec
if !exists( 'g:slimv_chs_root' )
    let g:slimv_chs_root = 'http://clojure.org/'
endif
 
if !exists( 'g:slimv_chs_cljhs' )
    let g:slimv_chs_cljhs = [
    \["clojure.core", "api\\#toc1"],
    \["*", "api\\#toc2"],
    \["*1", "api\\#toc6"],
    \["*2", "api\\#toc7"],
    \["*3", "api\\#toc8"],
    \["*agent*", "api\\#toc9"],
    \["*command-line-args*", "api\\#toc10"],
    \["*compile-files*", "api\\#toc11"],
    \["*compile-path*", "api\\#toc12"],
    \["*e", "api\\#toc13"],
    \["*err*", "api\\#toc14"],
    \["*file*", "api\\#toc15"],
    \["*flush-on-newline*", "api\\#toc16"],
    \["*in*", "api\\#toc17"],
    \["*ns*", "api\\#toc18"],
    \["*out*", "api\\#toc19"],
    \["*print-dup*", "api\\#toc20"],
    \["*print-length*", "api\\#toc21"],
    \["*print-level*", "api\\#toc22"],
    \["*print-meta*", "api\\#toc23"],
    \["*print-readably*", "api\\#toc24"],
    \["*warn-on-reflection*", "api\\#toc25"],
    \["+", "api\\#toc26"],
    \["-", "api\\#toc30"],
    \["->", "api\\#toc33"],
    \["..", "api\\#toc36"],
    \["/", "api\\#toc39"],
    \["<", "api\\#toc42"],
    \["<=", "api\\#toc45"],
    \["=", "api\\#toc48"],
    \["==", "api\\#toc51"],
    \[">", "api\\#toc54"],
    \[">=", "api\\#toc57"],
    \["accessor", "api\\#toc60"],
    \["aclone", "api\\#toc61"],
    \["add-classpath", "api\\#toc62"],
    \["add-watch", "api\\#toc63"],
    \["add-watcher", "api\\#toc64"],
    \["agent", "api\\#toc65"],
    \["agent-errors", "api\\#toc67"],
    \["aget", "api\\#toc68"],
    \["alength", "api\\#toc70"],
    \["alias", "api\\#toc71"],
    \["all-ns", "api\\#toc72"],
    \["alter", "api\\#toc73"],
    \["alter-meta!", "api\\#toc74"],
    \["alter-var-root", "api\\#toc75"],
    \["amap", "api\\#toc76"],
    \["ancestors", "api\\#toc78"],
    \["and", "api\\#toc80"],
    \["apply", "api\\#toc84"],
    \["areduce", "api\\#toc85"],
    \["array-map", "api\\#toc87"],
    \["aset", "api\\#toc89"],
    \["aset-boolean", "api\\#toc91"],
    \["aset-byte", "api\\#toc93"],
    \["aset-char", "api\\#toc95"],
    \["aset-double", "api\\#toc97"],
    \["aset-float", "api\\#toc99"],
    \["aset-int", "api\\#toc101"],
    \["aset-long", "api\\#toc103"],
    \["aset-short", "api\\#toc105"],
    \["assert", "api\\#toc107"],
    \["assoc", "api\\#toc109"],
    \["assoc-in", "api\\#toc111"],
    \["associative?", "api\\#toc112"],
    \["atom", "api\\#toc113"],
    \["await", "api\\#toc115"],
    \["await-for", "api\\#toc116"],
    \["bases", "api\\#toc117"],
    \["bean", "api\\#toc118"],
    \["bigdec", "api\\#toc119"],
    \["bigint", "api\\#toc120"],
    \["binding", "api\\#toc121"],
    \["bit-and", "api\\#toc123"],
    \["bit-and-not", "api\\#toc124"],
    \["bit-clear", "api\\#toc125"],
    \["bit-flip", "api\\#toc126"],
    \["bit-not", "api\\#toc127"],
    \["bit-or", "api\\#toc128"],
    \["bit-set", "api\\#toc129"],
    \["bit-shift-left", "api\\#toc130"],
    \["bit-shift-right", "api\\#toc131"],
    \["bit-test", "api\\#toc132"],
    \["bit-xor", "api\\#toc133"],
    \["boolean", "api\\#toc134"],
    \["butlast", "api\\#toc135"],
    \["byte", "api\\#toc136"],
    \["cast", "api\\#toc137"],
    \["char", "api\\#toc138"],
    \["char-escape-string", "api\\#toc139"],
    \["char-name-string", "api\\#toc140"],
    \["class", "api\\#toc141"],
    \["class?", "api\\#toc142"],
    \["clear-agent-errors", "api\\#toc143"],
    \["coll?", "api\\#toc144"],
    \["comment", "api\\#toc145"],
    \["commute", "api\\#toc147"],
    \["comp", "api\\#toc148"],
    \["comparator", "api\\#toc149"],
    \["compare", "api\\#toc150"],
    \["compare-and-set!", "api\\#toc151"],
    \["compile", "api\\#toc152"],
    \["complement", "api\\#toc153"],
    \["concat", "api\\#toc154"],
    \["cond", "api\\#toc158"],
    \["condp", "api\\#toc160"],
    \["conj", "api\\#toc162"],
    \["cons", "api\\#toc164"],
    \["constantly", "api\\#toc165"],
    \["construct-proxy", "api\\#toc166"],
    \["contains?", "api\\#toc167"],
    \["count", "api\\#toc168"],
    \["counted?", "api\\#toc169"],
    \["create-ns", "api\\#toc170"],
    \["create-struct", "api\\#toc171"],
    \["cycle", "api\\#toc172"],
    \["dec", "api\\#toc173"],
    \["decimal?", "api\\#toc174"],
    \["declare", "api\\#toc175"],
    \["definline", "api\\#toc177"],
    \["defmacro", "api\\#toc179"],
    \["defmethod", "api\\#toc182"],
    \["defmulti", "api\\#toc184"],
    \["defn", "api\\#toc186"],
    \["defn-", "api\\#toc189"],
    \["defonce", "api\\#toc191"],
    \["defstruct", "api\\#toc193"],
    \["delay", "api\\#toc195"],
    \["delay?", "api\\#toc197"],
    \["deref", "api\\#toc198"],
    \["derive", "api\\#toc199"],
    \["descendants", "api\\#toc201"],
    \["disj", "api\\#toc203"],
    \["dissoc", "api\\#toc206"],
    \["distinct", "api\\#toc209"],
    \["distinct?", "api\\#toc210"],
    \["doall", "api\\#toc213"],
    \["doc", "api\\#toc215"],
    \["dorun", "api\\#toc217"],
    \["doseq", "api\\#toc219"],
    \["dosync", "api\\#toc221"],
    \["dotimes", "api\\#toc223"],
    \["doto", "api\\#toc225"],
    \["double", "api\\#toc227"],
    \["double-array", "api\\#toc228"],
    \["doubles", "api\\#toc230"],
    \["drop", "api\\#toc231"],
    \["drop-last", "api\\#toc232"],
    \["drop-while", "api\\#toc234"],
    \["empty", "api\\#toc235"],
    \["empty?", "api\\#toc236"],
    \["ensure", "api\\#toc237"],
    \["enumeration-seq", "api\\#toc238"],
    \["eval", "api\\#toc239"],
    \["even?", "api\\#toc240"],
    \["every?", "api\\#toc241"],
    \["false?", "api\\#toc242"],
    \["ffirst", "api\\#toc243"],
    \["file-seq", "api\\#toc244"],
    \["filter", "api\\#toc245"],
    \["find", "api\\#toc246"],
    \["find-doc", "api\\#toc247"],
    \["find-ns", "api\\#toc248"],
    \["find-var", "api\\#toc249"],
    \["first", "api\\#toc250"],
    \["float", "api\\#toc251"],
    \["float-array", "api\\#toc252"],
    \["float?", "api\\#toc254"],
    \["floats", "api\\#toc255"],
    \["flush", "api\\#toc256"],
    \["fn", "api\\#toc257"],
    \["fn?", "api\\#toc259"],
    \["fnext", "api\\#toc260"],
    \["for", "api\\#toc261"],
    \["force", "api\\#toc263"],
    \["format", "api\\#toc264"],
    \["future", "api\\#toc265"],
    \["future-call", "api\\#toc267"],
    \["gen-class", "api\\#toc268"],
    \["gen-interface", "api\\#toc270"],
    \["gensym", "api\\#toc272"],
    \["get", "api\\#toc274"],
    \["get-in", "api\\#toc276"],
    \["get-proxy-class", "api\\#toc277"],
    \["get-validator", "api\\#toc278"],
    \["hash", "api\\#toc279"],
    \["hash-map", "api\\#toc280"],
    \["hash-set", "api\\#toc282"],
    \["identical?", "api\\#toc284"],
    \["identity", "api\\#toc285"],
    \["if-let", "api\\#toc286"],
    \["if-not", "api\\#toc289"],
    \["ifn?", "api\\#toc292"],
    \["import", "api\\#toc293"],
    \["in-ns", "api\\#toc294"],
    \["inc", "api\\#toc295"],
    \["init-proxy", "api\\#toc296"],
    \["instance?", "api\\#toc297"],
    \["int", "api\\#toc298"],
    \["int-array", "api\\#toc299"],
    \["integer?", "api\\#toc301"],
    \["interleave", "api\\#toc302"],
    \["intern", "api\\#toc303"],
    \["interpose", "api\\#toc305"],
    \["into", "api\\#toc306"],
    \["into-array", "api\\#toc307"],
    \["ints", "api\\#toc309"],
    \["io!", "api\\#toc310"],
    \["isa?", "api\\#toc312"],
    \["iterate", "api\\#toc314"],
    \["iterator-seq", "api\\#toc315"],
    \["key", "api\\#toc316"],
    \["keys", "api\\#toc317"],
    \["keyword", "api\\#toc318"],
    \["keyword?", "api\\#toc320"],
    \["last", "api\\#toc321"],
    \["lazy-cat", "api\\#toc322"],
    \["lazy-seq", "api\\#toc324"],
    \["let", "api\\#toc326"],
    \["letfn", "api\\#toc328"],
    \["line-seq", "api\\#toc330"],
    \["list", "api\\#toc331"],
    \["list*", "api\\#toc332"],
    \["list?", "api\\#toc333"],
    \["load", "api\\#toc334"],
    \["load-file", "api\\#toc335"],
    \["load-reader", "api\\#toc336"],
    \["load-string", "api\\#toc337"],
    \["loaded-libs", "api\\#toc338"],
    \["locking", "api\\#toc339"],
    \["long", "api\\#toc341"],
    \["long-array", "api\\#toc342"],
    \["longs", "api\\#toc344"],
    \["loop", "api\\#toc345"],
    \["macroexpand", "api\\#toc347"],
    \["macroexpand-1", "api\\#toc348"],
    \["make-array", "api\\#toc349"],
    \["make-hierarchy", "api\\#toc351"],
    \["map", "api\\#toc352"],
    \["map?", "api\\#toc356"],
    \["mapcat", "api\\#toc357"],
    \["max", "api\\#toc358"],
    \["max-key", "api\\#toc361"],
    \["memfn", "api\\#toc364"],
    \["memoize", "api\\#toc366"],
    \["merge", "api\\#toc367"],
    \["merge-with", "api\\#toc368"],
    \["meta", "api\\#toc369"],
    \["methods", "api\\#toc370"],
    \["min", "api\\#toc371"],
    \["min-key", "api\\#toc374"],
    \["mod", "api\\#toc377"],
    \["name", "api\\#toc378"],
    \["namespace", "api\\#toc379"],
    \["neg?", "api\\#toc380"],
    \["newline", "api\\#toc381"],
    \["next", "api\\#toc382"],
    \["nfirst", "api\\#toc383"],
    \["nil?", "api\\#toc384"],
    \["nnext", "api\\#toc385"],
    \["not", "api\\#toc386"],
    \["not-any?", "api\\#toc387"],
    \["not-empty", "api\\#toc388"],
    \["not-every?", "api\\#toc389"],
    \["not=", "api\\#toc390"],
    \["ns", "api\\#toc393"],
    \["ns-aliases", "api\\#toc395"],
    \["ns-imports", "api\\#toc396"],
    \["ns-interns", "api\\#toc397"],
    \["ns-map", "api\\#toc398"],
    \["ns-name", "api\\#toc399"],
    \["ns-publics", "api\\#toc400"],
    \["ns-refers", "api\\#toc401"],
    \["ns-resolve", "api\\#toc402"],
    \["ns-unalias", "api\\#toc403"],
    \["ns-unmap", "api\\#toc404"],
    \["nth", "api\\#toc405"],
    \["nthnext", "api\\#toc407"],
    \["num", "api\\#toc408"],
    \["number?", "api\\#toc409"],
    \["odd?", "api\\#toc410"],
    \["or", "api\\#toc411"],
    \["parents", "api\\#toc415"],
    \["partial", "api\\#toc417"],
    \["partition", "api\\#toc421"],
    \["pcalls", "api\\#toc423"],
    \["peek", "api\\#toc424"],
    \["pmap", "api\\#toc425"],
    \["pop", "api\\#toc427"],
    \["pos?", "api\\#toc428"],
    \["pr", "api\\#toc429"],
    \["pr-str", "api\\#toc432"],
    \["prefer-method", "api\\#toc433"],
    \["prefers", "api\\#toc434"],
    \["print", "api\\#toc435"],
    \["print-namespace-doc", "api\\#toc436"],
    \["print-str", "api\\#toc437"],
    \["printf", "api\\#toc438"],
    \["println", "api\\#toc439"],
    \["println-str", "api\\#toc440"],
    \["prn", "api\\#toc441"],
    \["prn-str", "api\\#toc442"],
    \["proxy", "api\\#toc443"],
    \["proxy-mappings", "api\\#toc445"],
    \["proxy-super", "api\\#toc446"],
    \["pvalues", "api\\#toc448"],
    \["quot", "api\\#toc450"],
    \["rand", "api\\#toc451"],
    \["rand-int", "api\\#toc453"],
    \["range", "api\\#toc454"],
    \["ratio?", "api\\#toc457"],
    \["rationalize", "api\\#toc458"],
    \["re-find", "api\\#toc459"],
    \["re-groups", "api\\#toc461"],
    \["re-matcher", "api\\#toc462"],
    \["re-matches", "api\\#toc463"],
    \["re-pattern", "api\\#toc464"],
    \["re-seq", "api\\#toc465"],
    \["read", "api\\#toc466"],
    \["read-line", "api\\#toc470"],
    \["read-string", "api\\#toc471"],
    \["reduce", "api\\#toc472"],
    \["ref", "api\\#toc474"],
    \["ref-set", "api\\#toc476"],
    \["refer", "api\\#toc477"],
    \["refer-clojure", "api\\#toc478"],
    \["release-pending-sends", "api\\#toc480"],
    \["rem", "api\\#toc481"],
    \["remove", "api\\#toc482"],
    \["remove-method", "api\\#toc483"],
    \["remove-ns", "api\\#toc484"],
    \["remove-watch", "api\\#toc485"],
    \["remove-watcher", "api\\#toc486"],
    \["repeat", "api\\#toc487"],
    \["repeatedly", "api\\#toc489"],
    \["replace", "api\\#toc490"],
    \["replicate", "api\\#toc491"],
    \["require", "api\\#toc492"],
    \["reset!", "api\\#toc493"],
    \["reset-meta!", "api\\#toc494"],
    \["resolve", "api\\#toc495"],
    \["rest", "api\\#toc496"],
    \["resultset-seq", "api\\#toc497"],
    \["reverse", "api\\#toc498"],
    \["reversible?", "api\\#toc499"],
    \["rseq", "api\\#toc500"],
    \["rsubseq", "api\\#toc501"],
    \["second", "api\\#toc503"],
    \["select-keys", "api\\#toc504"],
    \["send", "api\\#toc505"],
    \["send-off", "api\\#toc506"],
    \["seq", "api\\#toc507"],
    \["seq?", "api\\#toc508"],
    \["seque", "api\\#toc509"],
    \["sequence", "api\\#toc511"],
    \["sequential?", "api\\#toc512"],
    \["set", "api\\#toc513"],
    \["set-validator!", "api\\#toc514"],
    \["set?", "api\\#toc515"],
    \["short", "api\\#toc516"],
    \["shutdown-agents", "api\\#toc517"],
    \["slurp", "api\\#toc518"],
    \["some", "api\\#toc519"],
    \["sort", "api\\#toc520"],
    \["sort-by", "api\\#toc522"],
    \["sorted-map", "api\\#toc524"],
    \["sorted-map-by", "api\\#toc525"],
    \["sorted-set", "api\\#toc526"],
    \["sorted?", "api\\#toc527"],
    \["special-form-anchor", "api\\#toc528"],
    \["special-symbol?", "api\\#toc529"],
    \["split-at", "api\\#toc530"],
    \["split-with", "api\\#toc531"],
    \["str", "api\\#toc532"],
    \["string?", "api\\#toc535"],
    \["struct", "api\\#toc536"],
    \["struct-map", "api\\#toc537"],
    \["subs", "api\\#toc538"],
    \["subseq", "api\\#toc540"],
    \["subvec", "api\\#toc542"],
    \["supers", "api\\#toc544"],
    \["swap!", "api\\#toc545"],
    \["symbol", "api\\#toc549"],
    \["symbol?", "api\\#toc551"],
    \["sync", "api\\#toc552"],
    \["syntax-symbol-anchor", "api\\#toc554"],
    \["take", "api\\#toc555"],
    \["take-nth", "api\\#toc556"],
    \["take-while", "api\\#toc557"],
    \["test", "api\\#toc558"],
    \["the-ns", "api\\#toc559"],
    \["time", "api\\#toc560"],
    \["to-array", "api\\#toc562"],
    \["to-array-2d", "api\\#toc563"],
    \["trampoline", "api\\#toc564"],
    \["tree-seq", "api\\#toc566"],
    \["true?", "api\\#toc567"],
    \["type", "api\\#toc568"],
    \["unchecked-add", "api\\#toc569"],
    \["unchecked-dec", "api\\#toc570"],
    \["unchecked-divide", "api\\#toc571"],
    \["unchecked-inc", "api\\#toc572"],
    \["unchecked-multiply", "api\\#toc573"],
    \["unchecked-negate", "api\\#toc574"],
    \["unchecked-remainder", "api\\#toc575"],
    \["unchecked-subtract", "api\\#toc576"],
    \["underive", "api\\#toc577"],
    \["update-in", "api\\#toc579"],
    \["update-proxy", "api\\#toc580"],
    \["use", "api\\#toc581"],
    \["val", "api\\#toc582"],
    \["vals", "api\\#toc583"],
    \["var-get", "api\\#toc584"],
    \["var-set", "api\\#toc585"],
    \["var?", "api\\#toc586"],
    \["vary-meta", "api\\#toc587"],
    \["vec", "api\\#toc588"],
    \["vector", "api\\#toc589"],
    \["vector?", "api\\#toc591"],
    \["when", "api\\#toc592"],
    \["when-first", "api\\#toc594"],
    \["when-let", "api\\#toc596"],
    \["when-not", "api\\#toc598"],
    \["while", "api\\#toc600"],
    \["with-in-str", "api\\#toc602"],
    \["with-local-vars", "api\\#toc604"],
    \["with-meta", "api\\#toc606"],
    \["with-open", "api\\#toc607"],
    \["with-out-str", "api\\#toc609"],
    \["with-precision", "api\\#toc611"],
    \["xml-seq", "api\\#toc613"],
    \["zero?", "api\\#toc614"],
    \["zipmap", "api\\#toc615"],
    \["clojure.inspector", "api\\#toc616"],
    \["inspect", "api\\#toc617"],
    \["inspect-table", "api\\#toc618"],
    \["inspect-tree", "api\\#toc619"],
    \["clojure.main", "api\\#toc620"],
    \["load-script", "api\\#toc621"],
    \["main", "api\\#toc622"],
    \["repl", "api\\#toc623"],
    \["repl-caught", "api\\#toc624"],
    \["repl-exception", "api\\#toc625"],
    \["repl-prompt", "api\\#toc626"],
    \["repl-read", "api\\#toc627"],
    \["skip-if-eol", "api\\#toc628"],
    \["skip-whitespace", "api\\#toc629"],
    \["with-bindings", "api\\#toc630"],
    \["clojure.parallel", "api\\#toc632"],
    \["pany", "api\\#toc633"],
    \["par", "api\\#toc634"],
    \["pdistinct", "api\\#toc636"],
    \["pfilter-dupes", "api\\#toc637"],
    \["pfilter-nils", "api\\#toc638"],
    \["pmax", "api\\#toc639"],
    \["pmin", "api\\#toc641"],
    \["preduce", "api\\#toc643"],
    \["psort", "api\\#toc644"],
    \["psummary", "api\\#toc646"],
    \["pvec", "api\\#toc648"],
    \["clojure.set", "api\\#toc649"],
    \["difference", "api\\#toc650"],
    \["index", "api\\#toc653"],
    \["intersection", "api\\#toc654"],
    \["join", "api\\#toc657"],
    \["map-invert", "api\\#toc659"],
    \["project", "api\\#toc660"],
    \["rename", "api\\#toc661"],
    \["rename-keys", "api\\#toc662"],
    \["select", "api\\#toc663"],
    \["union", "api\\#toc664"],
    \["clojure.xml", "api\\#toc668"],
    \["parse", "api\\#toc669"],
    \["clojure.zip", "api\\#toc671"],
    \["append-child", "api\\#toc672"],
    \["branch?", "api\\#toc673"],
    \["children", "api\\#toc674"],
    \["down", "api\\#toc675"],
    \["edit", "api\\#toc676"],
    \["end?", "api\\#toc677"],
    \["insert-child", "api\\#toc678"],
    \["insert-left", "api\\#toc679"],
    \["insert-right", "api\\#toc680"],
    \["left", "api\\#toc681"],
    \["leftmost", "api\\#toc682"],
    \["lefts", "api\\#toc683"],
    \["make-node", "api\\#toc684"],
    \["next", "api\\#toc685"],
    \["node", "api\\#toc686"],
    \["path", "api\\#toc687"],
    \["prev", "api\\#toc688"],
    \["remove", "api\\#toc689"],
    \["replace", "api\\#toc690"],
    \["right", "api\\#toc691"],
    \["rightmost", "api\\#toc692"],
    \["rights", "api\\#toc693"],
    \["root", "api\\#toc694"],
    \["seq-zip", "api\\#toc695"],
    \["up", "api\\#toc696"],
    \["vector-zip", "api\\#toc697"],
    \["xml-zip", "api\\#toc698"],
    \["zipper", "api\\#toc699"]]
endif

" Build the complete CLHS symbol database
if !exists( 'g:slimv_chs_db' )
    if exists( 'g:slimv_chs_user' )
	" Give a choice for the user to extend the symbol database
        let user = g:slimv_chs_user
    else
        let user = []
    endif
    let g:slimv_chs_db = 
    \g:slimv_chs_cljhs +
    \user

    " Do we need to sort the symbol database?
    "call sort( g:slimv_chs_db )
endif 

